import {
  VToolbar,
  VToolbarTitle
} from "./chunk-4KU7UZVK.js";
import "./chunk-IOEPBNDY.js";
import {
  makeVariantProps
} from "./chunk-QP3ELBVW.js";
import "./chunk-PFAMCABN.js";
import "./chunk-PVAHP5HQ.js";
import "./chunk-5ESRBFBI.js";
import "./chunk-5EQLL5QS.js";
import "./chunk-XX3EWFP3.js";
import "./chunk-W4S5UEE5.js";
import "./chunk-KMU34JNT.js";
import "./chunk-NENXNPQN.js";
import "./chunk-PTTVTLPP.js";
import "./chunk-BHXA6HRP.js";
import "./chunk-Z3N63F5C.js";
import "./chunk-MQGMZAMK.js";
import {
  genericComponent,
  makeComponentProps,
  propsFactory,
  provideDefaults,
  useRender
} from "./chunk-7JRHR5AA.js";
import {
  createVNode,
  toRef
} from "./chunk-ZV5R4Z6I.js";
import "./chunk-RSJERJUL.js";

// node_modules/vuetify/lib/components/VToolbar/VToolbarItems.mjs
var makeVToolbarItemsProps = propsFactory({
  ...makeComponentProps(),
  ...makeVariantProps({
    variant: "text"
  })
}, "VToolbarItems");
var VToolbarItems = genericComponent()({
  name: "VToolbarItems",
  props: makeVToolbarItemsProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    provideDefaults({
      VBtn: {
        color: toRef(props, "color"),
        height: "inherit",
        variant: toRef(props, "variant")
      }
    });
    useRender(() => {
      var _a;
      return createVNode("div", {
        "class": ["v-toolbar-items", props.class],
        "style": props.style
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
    });
    return {};
  }
});
export {
  VToolbar,
  VToolbarItems,
  VToolbarTitle
};
//# sourceMappingURL=vuetify_lib_components_VToolbar_index__mjs.js.map
